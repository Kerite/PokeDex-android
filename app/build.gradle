plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

configurations.all {
    exclude group: 'dev.rikka.rikkax.appcompat', module: 'appcompat'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

def versionProps = new Properties()
file('version.properties').withInputStream { versionProps.load(it) }
def versionNamePrefix = versionProps.getProperty('VERSION_NAME_PREFIX')

android {
    namespace 'com.kerite.pokedex'
    compileSdk 33

    defaultConfig {
        applicationId "com.kerite.pokedex"
        minSdk 29
        targetSdk 33
        versionCode 'git rev-list --no-merges --count HEAD'.execute().text.trim().toInteger()
        versionName "$versionNamePrefix-${'git rev-parse --short HEAD'.execute().text.trim()}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "APPCENTER_KEY", "\"${System.getenv("APP_CENTER_KEY") ?: ''}\"")
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    splits {
        abi {
            enable true
            universalApk true
        }
    }

    signingConfigs {
        release {
            if (project.properties['releaseStoreFile'] != null) {
                storeFile file(project.properties['releaseStoreFile'])
                storePassword project.properties['releaseStorePassword']
                keyAlias project.properties['releaseKeyAlias']
                keyPassword project.properties['releaseKeyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix '.debug'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_12
        targetCompatibility JavaVersion.VERSION_12
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_12.toString()
    }

    buildFeatures {
        viewBinding true
    }

    flavorDimensions += "distribute"

    productFlavors {
        appCenter {
            dimension "distribute"
            buildConfigField("Boolean", "IS_APP_CENTER", "true")
            buildConfigField("Boolean", "IS_GOOGLE_PLAY", "false")
        }
        googlePlay {
            dimension "distribute"
            buildConfigField("Boolean", "IS_APP_CENTER", "false")
            buildConfigField("Boolean", "IS_GOOGLE_PLAY", "true")
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version "3.23.2"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = outputFileName.replace("app-", "PokeDex-")
        }
    }
}

dependencies {
    implementation "androidx.activity:activity-ktx:1.6.0"
    implementation "androidx.fragment:fragment-ktx:1.5.3"
    implementation "androidx.collection:collection-ktx:1.2.0"
    implementation 'androidx.preference:preference-ktx:1.2.0'

    // Appcompat
    def jetpack_appcompat_version = '1.5.1'
    implementation "androidx.appcompat:appcompat:$jetpack_appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$jetpack_appcompat_version"

    // Core
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // DataStore
    implementation("androidx.datastore:datastore-preferences-core:1.0.0")
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Lifecycle
    def lifecycle_version = '2.5.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Navigation
    def jetpack_navigation_version = '2.5.2'
    implementation "androidx.navigation:navigation-fragment-ktx:$jetpack_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$jetpack_navigation_version"

    // ROOM
    def room_version = '2.4.3'
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // WorkManager
    def work_manager_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"
    implementation "androidx.work:work-multiprocess:$work_manager_version"

    implementation 'androidx.interpolator:interpolator:1.0.0'

    // 协程
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // MLKit
    implementation 'com.google.mlkit:image-labeling:17.0.7'
    implementation 'com.google.mlkit:image-labeling-custom:17.0.1'

    // Material Design
    implementation 'com.google.android.material:material:1.6.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:30.5.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    // Third Party Libraries
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'io.coil-kt:coil:2.2.2'
    implementation "dev.rikka.rikkax.material:material-preference:2.0.0"

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation('com.kerite.fission:fission-android:0.0.2') {
        changing true
    }
    implementation('com.kerite.fission:fission-common:0.0.2') {
        changing true
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // AppCenter
    def appCenterSdkVersion = '4.4.5'
    appCenterImplementation "com.microsoft.appcenter:appcenter-distribute:${appCenterSdkVersion}"
    googlePlayImplementation "com.microsoft.appcenter:appcenter-distribute-play:${appCenterSdkVersion}"
}